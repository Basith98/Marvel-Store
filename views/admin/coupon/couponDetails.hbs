<link href="https://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootswatch/3.3.7/flatly/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdn.materialdesignicons.com/5.0.45/css/materialdesignicons.min.css" />
<link rel="stylesheet" href="/stylesheets/style copy.css" />


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<link rel="stylesheet"
  href="https://res.cloudinary.com/dxfq3iotg/raw/upload/v1569006288/BBBootstrap/choices.min.css?version=7.0.0">
<script
  src="https://res.cloudinary.com/dxfq3iotg/raw/upload/v1569006273/BBBootstrap/choices.min.js?version=7.0.0"></script>

{{!--
<script src="https://code.jquery.com/jquery-3.6.0.min.js">
</script> --}}
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="/javascripts/comboTreePlugin.js" type="text/javascript"></script>

<div class="container-fluid bg-soft">
  <div class="row">
    <div class="col-12 mt-5">
      <class class="layout-container">
        <div class="layout-page">
          <div class="content-wrapper">
            <div class="card" style="background-color: rgb(247, 247, 247);">
              <form action="/admin/updateCoupon" method="post">
                <div class="card-header">
                  <h5>Add Coupon</h5>
                  <span>Please try to fill out all the form feild</span>
                </div>
                <div class="card-block">
                  <div class="card">
                    <div class="card-header">
                      <h5 class="card-title">Coupons start Date & End Date</h5>
                    </div>
                    <div class="card-body">
                      <div class="row ml-5">
                        <div class="col-12 col-lg-1"></div>
                        <div class="col-12 col-lg-1">
                          <h5 class="card-text">Start Date</h5>
                        </div>
                        <div class="col-12 col-lg-2 mr-5">
                          <input type="datetime-local" name="startDate" value="{{categoryDetails.limitPerUser}}"
                            label="hello" class="form-control" id="basic-default-fullname" placeholder="start datetime"
                            required="required" />
                        </div>
                        <div class="col-12 col-lg-1"></div>
                        <div class="col-12 col-lg-1">
                          <h5 class="card-text">End Date</h5>
                        </div>
                        <div class="col-12 col-lg-2 mr-5">
                          <input type="datetime-local" name="endDate" value="{{categoryDetails.limitPerUser}}"
                            label="hello" class="form-control" id="basic-default-fullname" placeholder="end datetime"
                            required="required" />
                        </div>
                      </div>

                    </div>
                  </div>


                  <div class="card">
                    <div class="card-header">
                      <h5 class="card-title">Product Information</h5>
                    </div>
                    <div class="card-body">
                      <div class="row gx-5">
                        <div class="col-6 mt-4">
                          <label class="form-label" for="basic-default-fullname">Coupon Name</label>
                          <input type="select" name="name" value="{{categoryDetails.name}}" label="hello"
                            class="form-control" id="basic-default-fullname" placeholder="Coupons Name"
                            required="required" />
                        </div>
                        {{!-- <div class="col-6 mt-4">
                          <label class="form-label" for="basic-default-fullname">Coupon Code</label>
                          <input type="select" name="productName" value="{{categoryDetails.name}}" label="hello"
                            class="form-control" id="basic-default-fullname" placeholder="Product name"
                            required="required" />
                        </div>
                        <div class="col-6 mt-4">
                          <label class="form-label" for="basic-default-fullname">Discount type</label>
                          <input type="select" name="productName" value="{{categoryDetails.name}}" label="hello"
                            class="form-control" id="basic-default-fullname" placeholder="Product name"
                            required="required" />
                        </div> --}}
                        <div class="col-6 mt-4">
                          <label class="form-label" for="basic-default-fullname">Discount Amount</label>
                          <input type="select" name="discountAmount" value="{{categoryDetails.name}}" label="hello"
                            class="form-control" id="basic-default-fullname" placeholder="Discount Amount"
                            required="required" />
                        </div>
                        <div class="col-6 mt-4">
                          <label class="form-label" for="basic-default-fullname">Minimum purchase</label>
                          <input type="select" name="minimumPurchase" value="{{categoryDetails.name}}" label="hello"
                            class="form-control" id="basic-default-fullname" placeholder="Minimum purchase"
                            required="required" />
                        </div>
                        {{!-- <div class="col-6 mt-4">
                          <label class="form-label" for="basic-default-fullname">Discount limit</label>
                          <input type="select" name="productName" value="{{categoryDetails.name}}" label="hello"
                            class="form-control" id="basic-default-fullname" placeholder="Product name"
                            required="required" />
                        </div>
                        <div class="col-6 mt-4">
                          <label class="form-label" for="basic-default-fullname">Number of users</label>
                          <input type="select" name="productName" value="{{categoryDetails.name}}" label="hello"
                            class="form-control" id="basic-default-fullname" placeholder="Product name"
                            required="required" />
                        </div> --}}
                      </div>
                      <div class="float-right mt-5 mr-4">
                        <input type="submit" class="btn btn-success" value="Submit" />
                      </div>

                    </div>
                  </div>
                </div>
              </form>
            </div>
            <!-- Row end -->
          </div>
        </div>
    </div>
  </div>
  </class>
</div>
</div>
</div>
<style>
  input[typ=file] {
    color: transparent;
  }
</style>

<script src="https://unpkg.com/axios@0.25.0/dist/axios.min.js"></script>
<script type="text/javascript">
  var comboTree2;
  let size, color, selectedColors = [];

  const form = document.getElementById("productform")
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    formData.append('sizes', JSON.stringify(SizeAndColorVariationTableData()))
    console.log([...formData]);
    await axios.post('/admin/updateProduct', formData);
  })


  /*$("#productform").submit(async (e) => {
    // const formData = new FormData();
    let product = $("#productform").serializeArray();
    e.preventDefault();
    //let formdata = new FormData(this.form);
    var form_data = new FormData($('#productform')[0]);

    let data = {
      withfiles: form_data,
      product: product,
      sizeColor: SizeAndColorVariationTableData()
    }

    await axios.post('/admin/updateProduct', data).then((res) => {
      Swal.fire({
        icon: 'success',
        title: res.data.transcationalInformation.message,
        showConfirmButton: false,
        timer: 1500
      })
      location.href = "report.html";
    }) 
    var formData = new FormData(this);

    $.ajax({
      type: 'POST',
      url: '/admin/updateProduct',
      data: formData,
      success: function (data) {
        console.log(data);
      },
      error: function (error) {
        console.log(`Error ${error}`);
      }

    });
  });*/

  function SizeAndColorVariationTableData() {
    var myRows = [];
    var $headers = $("th")
    //$headers.toLowerCase();
    console.log("header", $headers);
    var $rows = $("tbody tr").each(function (index) {
      $cells = $(this).find("td");
      myRows[index] = {};
      $cells.each(function (cellIndex) {
        myRows[index][$($headers[cellIndex]).html()] = $(this).html();
        console.log("value", myRows[index][$($headers[cellIndex]).html()])
      });
    });
    console.log(myRows);
    return myRows
  }

  function setSelectOptions(array, tagId) {
    $.each(array, function (index, value) {
      var tagOption = ('<option value=' + value.sizeId + '>' + value.sizeMap + '</option>');
      $(tagId).append(tagOption);
    });
    var multipleCancelButton = new Choices(tagId, {
      removeItemButton: true,
      searchResultLimit: 5,
      renderChoiceLimit: 5
    });
  }
  function sub() {
    let colors = document.getElementById('color-multiple-remove-button').options;
    $.each(colors, (index, element) => {
      selectedColors.push(element.value);
    })
    console.log("SC = ", typeof selectedColors[0]);
  }

  jQuery(document).ready(async function ($) {
    try {
      let parentCategoryss = false;
      const category = await axios.get('/admin/category')
      size = await axios.get('/admin/sizesDTO')
      color = await axios.get('/admin/colorDTO')
      setSelectOptions(size.data.sizes, '#size-multiple-remove-button');

      $.each(color.data.colors, function (index, value) {
        var tagOption = ('<option value=' + value.colorId + '>' + value.colorMap + '</option>');
        $('#color-multiple-remove-button').append(tagOption);
      });
      var multipleCancelButton = new Choices('#color-multiple-remove-button', {
        removeItemButton: true,
      });

      comboTree2 = $('#justAnotherInputBox').comboTree({
        source: category.data.parentCategories,
        isMultiple: false
      });
    }
    catch (e) {
      console.log("sfkjshdf", e)
    }
  });

  $('#toVariation').click(function () {
    $('#variationTab').click();
  });
  $('#backtoVariation').click(function () {
    $('#variationTab').click();
  })

  $('#toVitalInfo').click(function () {
    $('#vitalInfoTab').click();
  });
  $('#toOffersAndCoupons').click(function () {
    $('#offersAndCouponsTabId').click();
  })
  $('#toImage').click(function () {
    console.log("Image loadedAt ")
    $('#imageTab').click();
  })

  function showPreview(event, id) {
    if (event.target.files.length > 0) {
      var src = URL.createObjectURL(event.target.files[0]);
      var preview = document.getElementById(id);
      preview.src = src;
      preview.style.display = "block";
    }
  }

  function sub() {
    console.log("Call");
    let elements = document.getElementsByName("colors");

    console.log("color", elements);
  }

  function sizeAndColorVariation() {
    document.getElementById("colorAndSize-confirm").hidden = true;
    document.getElementById("WarningDiv").disabled = true;
    document.getElementById("color-multiple-remove-button").disabled = true;
    document.getElementById("variation-tab-next-btn").hidden = false;

    let tableRow = ``;
    tableRow = `<thead>
                  <tr>
                      <th>SL NO</th>
                      <th hidden>colorId</th>
                      <th hidden>sizeId</th>
                      <th>COLOR MAP</th>
                      <th>SIZE MAP</th>
                      <th>Quantity</th>
                       <th>Price</th>
                    </tr>
                  </thead>`;
    let selectedColors = Array.prototype.slice.call(document.querySelectorAll('#color-multiple-remove-button option:checked')).map(function (v) {
      return v.value;
    });

    let selectedSizes = Array.prototype.slice.call(document.querySelectorAll('#size-multiple-remove-button option:checked')).map(function (v) {
      return v.value;
    });
    let colors = color.data.colors;
    let sizes = size.data.sizes;
    let slNo = 0;
    colors.map(function (colorElement) {
      const arrOfselectedColors = selectedColors.map(Number);
      const arrOfselectedSizes = selectedSizes.map(Number);

      if (arrOfselectedColors.includes(colorElement.colorId)) {
        sizes.map((sizeElement) => {
          if (arrOfselectedSizes.includes(sizeElement.sizeId)) {
            let data = {
              color_id: colorElement._id,
              size_id: sizeElement._id,
              color: colorElement.color,
              size: sizeElement.size,
              colorMap: colorElement.colorMap,
              sizeMap: sizeElement.sizeMap,
              quantity: "",
              price: "",
              itemCondition: "",
            }

            let rows = `<tr>
                          <td>${++slNo}</td>
                          <td hidden>${data.color_id}</td>
                          <td hidden>${data.size_id}</td>
                          <td> ${data.colorMap}  <span class="dot-in-tr mt-3 ml-3" style="background-color:${data.color};"></span>  </td>
                          <td > ${data.sizeMap}  </td>
                          <td onkeyup="isNumber()" contenteditable="true" class="allow_only_numbers"> ${data.quantity}  </td>
                          <td onkeyup="isNumber()" contenteditable="true" class="allow_only_numbers"> ${data.price}  </td>
                        </tr>`;
            tableRow = tableRow.concat(rows);
          }
        })
      }
    });
    let totalTableRows = (tableRow)
    $("#sizeColorTable tr").remove();
    $('#sizeColorTable').append(totalTableRows);
  }

  function isNumber() {
    $(`.allow_only_numbers`).keydown(function (e) {
      if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
        ((e.keyCode == 65 || e.keyCode == 86 || e.keyCode == 67) && (e.ctrlKey === true || e.metaKey === true)) ||
        (e.keyCode >= 35 && e.keyCode <= 40)) {
        return;
      }
      if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
        e.preventDefault();
      }
    });

  }

</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"> </script>

<style>
  @import url('https://fonts.googleapis.com/css?family=Montserrat:400,500');

  tr:nth-of-type(odd) {
    background: rgb(201, 227, 253);
  }

  tr:nth-of-type(even) {
    background: rgb(215, 239, 249);
  }

  th {
    background: #3498db;
    color: white;
    font-weight: bold;
  }

  @import "compass/css3";

  .table-editable {
    position: relative;

    .glyphicon {
      font-size: 20px;
    }
  }

  table {
    width: 750px;
    border-collapse: collapse;
    margin: 50px auto;
  }

  td,
  th {
    padding: 8px;
    border: 1px solid #ccc;
    text-align: left;
    font-size: 16px;
  }

  .table-remove {
    color: #700;
    cursor: pointer;

    &:hover {
      color: #f00;
    }
  }

  .table-up {
    color: #007;
    cursor: pointer;

    &:hover {
      color: #00f;
    }
  }

  .table-down {
    color: #007;
    cursor: pointer;

    &:hover {
      color: #00f;
    }
  }

  .table-add {
    color: #070;
    cursor: pointer;
    position: absolute;
    top: 8px;
    right: 0;

    &:hover {
      color: #0b0;
    }
  }

  .dot-in-tr {
    height: 18px;
    width: 18px;
    border-radius: 50%;
    display: inline-block;
  }

  .warningBorder {
    width: 25%;
    height: ;
    border-style: solid;
    border-color: #FFAF38;
    border-radius: 7px;
    border-left-width: 12px;
  }
</style>